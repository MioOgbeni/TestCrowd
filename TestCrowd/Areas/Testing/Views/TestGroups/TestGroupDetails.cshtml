@using TestCrowd.DataAccess.Model.Tests
@model TestCrowd.DataAccess.Model.Tests.TestGroup
@{
    /**/

    ViewBag.Title = "Detail";
    Layout = "~/Areas/Testing/Views/Shared/_Layout.cshtml";
}

<script src="https://cloud.tinymce.com/5/tinymce.min.js"></script>
<script>tinymce.init({ selector: 'textarea' });</script>

<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">TestGroup - @Model.Name</h1>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div class=" row col-sm-6">
                <p class=" align-content-center">Skill difficulty:</p>
                <div class="ratingDetail">
                    @Html.RadioButtonFor(x => x.SkillDificulty, 5, new { @id = "skillstar5", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("5 stars", new { @title = "text", @for = "skillstar5" })
                    @Html.RadioButtonFor(x => x.SkillDificulty, 4, new { @id = "skillstar4", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("4 stars", new { @title = "text", @for = "skillstar4" })
                    @Html.RadioButtonFor(x => x.SkillDificulty, 3, new { @id = "skillstar3", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("3 stars", new { @title = "text", @for = "skillstar3" })
                    @Html.RadioButtonFor(x => x.SkillDificulty, 2, new { @id = "skillstar2", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("2 stars", new { @title = "text", @for = "skillstar2" })
                    @Html.RadioButtonFor(x => x.SkillDificulty, 1, new { @id = "skillstar1", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("1 stars", new { @title = "text", @for = "skillstar1" })
                </div>
            </div>

            <div class=" row col-sm-6">
                <p class=" align-content-center">Time difficulty:</p>
                <div class="ratingDetail">
                    @Html.Label("5 stars", new { @title = "text", @for = "timestar5" })
                    @Html.RadioButtonFor(x => x.TimeDificulty, 4, new { @id = "timestar4", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("4 stars", new { @title = "text", @for = "timestar4" })
                    @Html.RadioButtonFor(x => x.TimeDificulty, 3, new { @id = "timestar3", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("3 stars", new { @title = "text", @for = "timestar3" })
                    @Html.RadioButtonFor(x => x.TimeDificulty, 2, new { @id = "timestar2", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("2 stars", new { @title = "text", @for = "timestar2" })
                    @Html.RadioButtonFor(x => x.TimeDificulty, 1, new { @id = "timestar1", @name = "ratingDetail", @disabled = "true" })
                    @Html.Label("1 stars", new { @title = "text", @for = "timestar1" })
                </div>
            </div>
            <hr />
            <div class="row ml-1">
                <p class=" align-content-center font-weight-bold text-primary">Avilable to:&nbsp;</p> @Model.AvailableTo.ToShortDateString()
            </div>
            <div class="row ml-1">
                <p class=" align-content-center font-weight-bold text-primary">Reward multiplier:&nbsp;</p> @Html.Raw((int)(Model.RewardMultiplier * 100) - 100) &nbsp;<div class="text-primary"><i class="fas fa-percentage"></i></div>
            </div>
            <hr />       
            <div class=" row">
                <div class="col-auto mb-3 mb-sm-0">
                    @if (Model.TestCases != null && Model.TestCases.Count > 0)
                    {
                        <p class=" align-content-center">Test cases:</p>
                        <table>
                            <tbody>
                            @foreach (var testCase in Model.TestCases)
                            {
                                <tr class="border-left-primary border" id="detailTr">
                                    <td>&nbsp&nbsp&nbsp</td>
                                    <td border="1px" width="500" class="text-left">@testCase.Name</td>
                                    <td>&nbsp&nbsp&nbsp</td>
                                    <td border="1px" width="250" class="text-left">
                                        Skill dificulty:
                                        @{
                                            for (var i = 0; i < testCase.SkillDificulty; i++)
                                            {
                                                <span class="icon text-primary"><i class="fas fa-star"></i></span>
                                            }
                                            for (var i = 0; i < 5 - testCase.SkillDificulty; i++)
                                            {
                                                <span class="icon text-primary"><i class="far fa-star"></i></span>
                                            }
                                        }
                                    </td>
                                    <td>&nbsp&nbsp&nbsp</td>
                                    <td border="1px" width="250"class="text-left">
                                        Time dificulty:
                                        @{
                                            for (var i = 0; i < testCase.TimeDificulty; i++)
                                            {
                                                <span class="icon text-primary"><i class="fas fa-star"></i></span>
                                            }
                                            for (var i = 0; i < 5 - testCase.TimeDificulty; i++)
                                            {
                                                <span class="icon text-primary"><i class="far fa-star"></i></span>
                                            }
                                        }
                                    </td>
                                    <td>&nbsp&nbsp&nbsp</td>
                                    <td border="1px" width="200" class="text-center">Available to: @testCase.AvailableTo.ToShortDateString()</td>
                                    <td>&nbsp&nbsp&nbsp</td>
                                    <td border="1px" class="text-center">
                                        <a href="@Url.Action("TestDetails", "Tests", new {testGuid = testCase.Id})" class="btn btn-primary btn-user btn-block">
                                            <span class="icon text-white-50">
                                                <i class="fas fa-share-square"></i>
                                            </span>
                                        </a>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
            <br/>
            <br/>
            <div class=" row">
                <div class="col-sm-2 mb-3 mb-sm-0">
                    @if(Request.UrlReferrer != null)
                    {
                        <a class="btn btn-primary btn-user btn-block" onclick="history.go(-1); return false;" href="#">Back</a><br />
                    }
                    else
                    {
                        <a href="@Url.Action("TesterTestGroups")" class="btn btn-primary btn-user btn-block">Back</a>
                    }

                </div>
                @{
                    switch (ViewBag.Takened)
                    {
                        case GroupStatus.Takened:
                            <div class="col-sm-2 mb-3 mb-sm-0">
                                @Html.ActionLink("Resolve group", "ResolveGroup", new { testGroupGuid = ViewBag.TestsGuid.Id }, new { @class = "btn btn-danger btn-user btn-block" })
                            </div>
                            break;
                        case GroupStatus.Finished:
                            <div class="col-sm-3 mb-3 mb-sm-0">
                                <div class = "btn btn-secondary btn-user btn-block">Reviews can be added only for test cases</div>
                            </div>
                            break;
                        default:
                            <div class="col-sm-2 mb-3 mb-sm-0">
                                @Html.ActionLink("Take group", "TakeGroupFromDetails", new { testGroupGuid = Model.Id }, new { @class = "btn btn-success btn-user btn-block" })
                            </div>
                            break;
                    }
                }
            </div>
        </div>
    </div>
</div>
