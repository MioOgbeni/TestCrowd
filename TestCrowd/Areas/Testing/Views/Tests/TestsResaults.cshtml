@using TestCrowd.DataAccess.Model.Tests
@model IList<Tests>
@{
    ViewBag.Title = "Tests resaults";
}

<div class="container-fluid">

    <div class="card py-2 mb-3">
        <div class="card-body pl-2 pt-1 pb-0">
            <div class="row pl-3">
                <div class="dropdown mb-1 mr-1">
                    <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @((ViewBag.TestCase != null) ? ViewBag.TestCase.Name : "Select test case")
                    </button>
                    <div class="dropdown-menu animated--fade-in" aria-labelledby="dropdownMenuButton1" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 38px, 0px);">
                        @Ajax.ActionLink("All", "TestsResaults", new { page = ViewBag.CurrentPage, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "dropdown-item" })

                        @foreach (TestCase testCase in ViewBag.TestCases)
                        {
                            @Ajax.ActionLink(testCase.Name, "TestsResaults", new { page = ViewBag.CurrentPage, testCaseGuid = testCase.Id, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "dropdown-item" })
                        }
                    </div>
                </div>
                <div class="dropdown mb-1 mr-1">
                    <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @((ViewBag.Status != null) ? ViewBag.Status.Status : "Select result status")
                    </button>
                    <div class="dropdown-menu animated--fade-in" aria-labelledby="dropdownMenuButton2" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 38px, 0px);">
                        @Ajax.ActionLink("All", "TestsResaults", new { page = ViewBag.CurrentPage, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "dropdown-item" })

                        @foreach (TestStatus status in ViewBag.Statuses)
                        {
                            @Ajax.ActionLink(status.Status, "TestsResaults", new { page = ViewBag.CurrentPage, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = status.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "dropdown-item" })
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="card py-1 bg-secondary text-white">
        <div class="card-body pl-2 pt-0 pb-0">
            <div class="row">
                <div class="col-sm-0-1">
                    <i class="fas fa-fw fa-info p-0"></i>
                </div>
                <div class="col">
                    Name
                </div>
                <div class="col">
                    Tester
                </div>
                <div class="col">
                    Status
                </div>
                <div class="col">
                    Finished
                </div>
            </div>
        </div>
    </div>

    @foreach ((Tests test, Int32 i) in Model.Select((value, i) => (value, i)))
    {

        <div class="card py-1 bg-primary text-white">
            <div class="card-body pl-2 pt-0 pb-0">
                <div class="row">
                    <div class="col-sm-0-1">
                        <a class="nav-link text-white dropdown-toggle p-0" href="#" data-toggle="collapse" data-target="#collapseUtilities_@i" aria-expanded="true" aria-controls="collapseUtilities">
                        </a>
                    </div>
                    <div class="col">
                        <a class="text-white" href="@Url.Action("DetailTestCaseCompany", new {id = test.Test.Id.ToString()})">
                            @test.Test.Name
                        </a>
                    </div>
                    <div class="col">
                        @test.Tester.UserName
                    </div>
                    <div class="col">
                        @test.TestStatus.Status
                    </div>
                    <div class="col">
                        @test.Finished.Value.ToShortDateString()
                    </div>
                </div>
            </div>
        </div>

        <div id="collapseUtilities_@i" class="card border-left-primary mb-2 collapse">
            <div class="card-body">@if (test.Evidences != null && test.Evidences.Count > 0)
                        {
                            <div class="row">
                                <div class="col-sm-7 mb-3 mb-sm-0">
                                    <p class=" align-content-center">Evidences:</p>
                                    <table>
                                        <tbody>
                                        @foreach (var evidence in test.Evidences)
                                        {
                                            <tr class="border-left-primary border" id="detailTr">
                                                <td>&nbsp&nbsp&nbsp</td>
                                                <td border="1px" width="700" class="text-left">@evidence.RealName@evidence.Extension</td>
                                                <td>&nbsp&nbsp&nbsp</td>
                                                <td border="1px" class="text-center">@evidence.Attached.ToShortDateString()</td>
                                                <td>&nbsp&nbsp&nbsp</td>
                                                <td border="1px" class="text-center">
                                                    <a href="@Path.Combine("/Uploads", evidence.Name + evidence.Extension)" class="btn btn-primary btn-user btn-block" download="@evidence.RealName@evidence.Extension">
                                                        <span class="icon text-white-50">
                                                            <i class="fas fa-download"></i>
                                                        </span>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="text-center">
                                <p class="text-gray-500 mb-0">No evidence was uploaded...</p>
                            </div>
                        }
            </div>
        </div>
    }

    @if (Model.Count > 0)
    {
        
        <br />
        <div class="row">
            <div class="col d-flex justify-content-end mb-3">
                @if (ViewBag.Pages != null)
                {
                    @Ajax.ActionLink("First", "TestsResaults", new { page = 1, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-primary text-white text-uppercase mr-1" })
                    for (int i = 1; i <= ViewBag.Pages; i++)
                    {
                        if (ViewBag.CurrentPage == 1)
                        {
                            if (i >= (ViewBag.CurrentPage) && i <= (ViewBag.CurrentPage + 2))
                            {
                                if (ViewBag.CurrentPage == i)
                                {
                                    @Ajax.ActionLink(i.ToString(), "TestsResaults", new { page = i, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-primary border-primary text-white text-uppercase mr-1" })

                                }
                                else
                                {
                                    @Ajax.ActionLink(i.ToString(), "TestsResaults", new { page = i, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-light border-primary text-primary text-uppercase mr-1" })

                                }
                            }
                        }
                        else if (ViewBag.CurrentPage == ViewBag.Pages)
                        {
                            if (i >= (ViewBag.CurrentPage - 2) && i <= (ViewBag.CurrentPage))
                            {
                                if (ViewBag.CurrentPage == i)
                                {
                                    @Ajax.ActionLink(i.ToString(), "TestsResaults", new { page = i, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-primary border-primary text-white text-uppercase mr-1" })

                                }
                                else
                                {
                                    @Ajax.ActionLink(i.ToString(), "TestsResaults", new { page = i, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-light border-primary text-primary text-uppercase mr-1" })

                                }
                            }
                        }
                        else
                        {
                            if (i >= (ViewBag.CurrentPage - 1) && i <= (ViewBag.CurrentPage + 1))
                            {
                                if (ViewBag.CurrentPage == i)
                                {
                                    @Ajax.ActionLink(i.ToString(), "TestsResaults", new { page = i, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-primary border-primary text-white text-uppercase mr-1" })

                                }
                                else
                                {
                                    @Ajax.ActionLink(i.ToString(), "TestsResaults", new { page = i, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-light border-primary text-primary text-uppercase mr-1" })

                                }
                            }
                        }

                    }
                    @Ajax.ActionLink("Last", "TestsResaults", new { page = ViewBag.Pages, testCaseGuid = (ViewBag.TestCase != null) ? ViewBag.TestCase.Id : null, statusGuid = (ViewBag.Status != null) ? ViewBag.Status.Id : null }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "dynamicContent" }, new { @class = "btn btn-primary text-white text-uppercase mr-1" })
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <p class="lead text-gray-800 mb-5"></p>
            <p class="text-gray-500 mb-0">There's nothing to match your filtering...</p>
        </div>
    }


</div>
